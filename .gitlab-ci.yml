stages:
  - protos
  - build
  - test
  - release

variables:
  GIT_DEPTH: 1
  RELEASE_BRANCH: develop
  GRPC_TAG: $CI_REGISTRY/couchers/grpc:latest
  PROXY_IMAGE: $CI_REGISTRY_IMAGE/proxy:latest
  BACKEND_IMAGE: $CI_REGISTRY_IMAGE/backend:latest
  MEDIA_IMAGE: $CI_REGISTRY_IMAGE/media:latest
  FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/frontend:latest
  VUE_IMAGE: $CI_REGISTRY_IMAGE/vue:latest
  PROXY_TAG: $CI_REGISTRY_IMAGE/proxy:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  BACKEND_TAG: $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  MEDIA_TAG: $CI_REGISTRY_IMAGE/media:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  FRONTEND_TAG: $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  VUE_TAG: $CI_REGISTRY_IMAGE/vue:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

default:
  image: docker
  services:
    - docker:19.03.12-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


protos:
  stage: protos
  image: $GRPC_TAG
  inherit:
    # the grpc container doesn't have docker, no need to login
    default: false
  script:
    - cd app && ./generate_protos.sh
  rules:
    - changes:
      - app/**/*
  artifacts:
    paths:
      - app/


build:proxy:
  stage: build
  script:
    - docker build -t $PROXY_TAG app/proxy/
    - docker push $PROXY_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/proxy/**/*

build:backend:
  stage: build
  script:
    - docker build -t $BACKEND_TAG app/backend/
    - docker push $BACKEND_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/backend/**/*

build:media:
  stage: build
  script:
    - docker build -t $MEDIA_TAG app/media/
    - docker push $MEDIA_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/media/**/*

build:frontend:
  stage: build
  script:
    - docker build -t $FRONTEND_TAG app/frontend/
    - docker push $FRONTEND_TAG
    # creates a new docker container (docker create returns the container name), and copies the /app folder to the host
    - mkdir -p artifacts/frontend && docker cp $(docker create $FRONTEND_TAG):/app/dist artifacts/frontend
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/frontend/**/*
  artifacts:
    paths:
      - artifacts/frontend/

build:vue:
  stage: build
  script:
    - docker build -t $VUE_TAG app/vue/
    - docker push $VUE_TAG
    # creates a new docker container (docker create returns the container name), and copies the /app folder to the host
    - mkdir -p artifacts/vue && docker cp $(docker create $FRONTEND_TAG):/app/dist artifacts/vue
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/vue/**/*
  artifacts:
    paths:
      - artifacts/vue/


test:backend:
  stage: test
  image: $BACKEND_TAG
  inherit:
    # no docker login
    default: false
  services:
    - postgres:12
  variables:
    POSTGRES_PASSWORD: c765064a49d18a95
    DATABASE_CONNECTION_STRING: "postgresql://postgres:c765064a49d18a95@postgres/postgres"
  script:
    - cd /app && pytest src --junitxml=test-results/junit.xml
  artifacts:
    paths:
      - /app/test-results/
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/media/**/*

test:media:
  stage: test
  image: $MEDIA_TAG
  inherit:
    # no docker login
    default: false
  variables:
    MEDIA_SERVER_FROM_ENV: 0
  script:
    - cd /app && pytest src --junitxml=test-results/junit.xml
  artifacts:
    paths:
      - /app/test-results
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
    - if: $CI_COMMIT_BRANCH != $RELEASE_BRANCH
      changes:
      - app/pb/**/*
      - app/media/**/*


release:proxy:
  stage: release
  script:
    - docker pull $PROXY_TAG
    - docker tag $PROXY_TAG $PROXY_IMAGE
    - docker push $PROXY_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:backend:
  stage: release
  script:
    - docker pull $BACKEND_TAG
    - docker tag $BACKEND_TAG $BACKEND_IMAGE
    - docker push $BACKEND_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:media:
  stage: release
  script:
    - docker pull $MEDIA_TAG
    - docker tag $MEDIA_TAG $MEDIA_IMAGE
    - docker push $MEDIA_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:frontend:
  stage: release
  script:
    - docker pull $FRONTEND_TAG
    - docker tag $FRONTEND_TAG $FRONTEND_IMAGE
    - docker push $FRONTEND_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*

release:vue:
  stage: release
  script:
    - docker pull $VUE_TAG
    - docker tag $VUE_TAG $VUE_IMAGE
    - docker push $VUE_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $RELEASE_BRANCH
      changes:
      - app/**/*
