syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service API {
  rpc Ping(PingReq) returns (PingRes) {
    // Pings the server for updates and basic user info
  }

  rpc GetUser(GetUserReq) returns (User) {
    // Get info about a particular user
  }

  rpc UpdateProfile(UpdateProfileReq) returns (UpdateProfileRes) {
    // Update your profile
  }

  rpc SSO(SSOReq) returns (SSORes) {
    // Performs Discourse SSO
  }

  rpc Search(SearchReq) returns (SearchRes) {
    // Search for user names and usernames (for now)
  }
}

message SearchReq {
  string query = 1;
}

message SearchRes {
  repeated User users = 1;
}

message PingReq {}

message PingRes {
  // Basic info about user
  int64 user_id = 1;
  string username = 2;
  string name = 3;
  string color = 4;
}

message User {
  string username = 1;
  string name = 2;
  string city = 3;
  double verification = 4;
  double community_standing = 5;
  uint32 num_references = 6;
  string gender = 7;
  uint32 age = 8;
  string color = 9; // web color, e.g. #643073, case doesn't matter
  google.protobuf.Timestamp joined = 10; // not exact
  google.protobuf.Timestamp last_active = 11; // not exact
  string occupation = 12;
  string about_me = 13;
  string about_place = 14;
  repeated string languages = 15;
  repeated string countries_visited = 16;
  repeated string countries_lived = 17;
}

message GetUserReq {
  string user = 1;
}

message UpdateProfileReq {
  // These StringValue types allow us to determine if the value is absent versus ""

  google.protobuf.StringValue name = 1;
  google.protobuf.StringValue city = 2;
  google.protobuf.StringValue gender = 3;
  google.protobuf.StringValue occupation = 4;
  google.protobuf.StringValue about_me = 5;
  google.protobuf.StringValue about_place = 6;
  google.protobuf.StringValue color = 7;

  message RepeatedStringValue {
    // A RepeatedStringValue is like a "protobuf warpper" (like {Type}Value) but for repeated strings
    // allows us to determine if the user wanted to remote this list of strings
    bool exists = 1;
    repeated string value = 2;
  }

  RepeatedStringValue languages = 8;
  RepeatedStringValue countries_visited = 9;
  RepeatedStringValue countries_lived = 10;
}

message UpdateProfileRes {
  bool updated_name = 1;
  bool updated_city = 2;
  bool updated_gender = 3;
  bool updated_occupation = 4;
  bool updated_about_me = 5;
  bool updated_about_place = 6;
  bool updated_color = 7;
  bool updated_languages = 8;
  bool updated_countries_visited = 9;
  bool updated_countries_lived = 10;
}

message SSOReq {
  // just raw query strings from discourse
  string sso = 1;
  string sig = 2;
}

message SSORes {
  string redirect_url = 1;
}
