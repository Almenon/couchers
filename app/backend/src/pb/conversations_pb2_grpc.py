# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from pb import conversations_pb2 as pb_dot_conversations__pb2


class ConversationsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListMessageThreads = channel.unary_unary(
                '/conversations.Conversations/ListMessageThreads',
                request_serializer=pb_dot_conversations__pb2.ListMessageThreadsReq.SerializeToString,
                response_deserializer=pb_dot_conversations__pb2.ListMessageThreadsRes.FromString,
                )
        self.EditMessageThreadStatus = channel.unary_unary(
                '/conversations.Conversations/EditMessageThreadStatus',
                request_serializer=pb_dot_conversations__pb2.EditMessageThreadStatusReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetMessageThread = channel.unary_unary(
                '/conversations.Conversations/GetMessageThread',
                request_serializer=pb_dot_conversations__pb2.GetMessageThreadReq.SerializeToString,
                response_deserializer=pb_dot_conversations__pb2.GetMessageThreadRes.FromString,
                )
        self.GetMessageThreadInfo = channel.unary_unary(
                '/conversations.Conversations/GetMessageThreadInfo',
                request_serializer=pb_dot_conversations__pb2.GetMessageThreadInfoReq.SerializeToString,
                response_deserializer=pb_dot_conversations__pb2.GetMessageThreadInfoRes.FromString,
                )
        self.CreateMessageThread = channel.unary_unary(
                '/conversations.Conversations/CreateMessageThread',
                request_serializer=pb_dot_conversations__pb2.CreateMessageThreadReq.SerializeToString,
                response_deserializer=pb_dot_conversations__pb2.CreateMessageThreadRes.FromString,
                )
        self.EditMessageThread = channel.unary_unary(
                '/conversations.Conversations/EditMessageThread',
                request_serializer=pb_dot_conversations__pb2.EditMessageThreadReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.MakeMessageThreadAdmin = channel.unary_unary(
                '/conversations.Conversations/MakeMessageThreadAdmin',
                request_serializer=pb_dot_conversations__pb2.ThreadUserReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.RemoveMessageThreadAdmin = channel.unary_unary(
                '/conversations.Conversations/RemoveMessageThreadAdmin',
                request_serializer=pb_dot_conversations__pb2.ThreadUserReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/conversations.Conversations/SendMessage',
                request_serializer=pb_dot_conversations__pb2.SendMessageReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.LeaveMessageThread = channel.unary_unary(
                '/conversations.Conversations/LeaveMessageThread',
                request_serializer=pb_dot_conversations__pb2.LeaveMessageThreadReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.InviteToMessageThread = channel.unary_unary(
                '/conversations.Conversations/InviteToMessageThread',
                request_serializer=pb_dot_conversations__pb2.ThreadUserReq.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SearchMessages = channel.unary_unary(
                '/conversations.Conversations/SearchMessages',
                request_serializer=pb_dot_conversations__pb2.SearchMessagesReq.SerializeToString,
                response_deserializer=pb_dot_conversations__pb2.SearchMessagesRes.FromString,
                )


class ConversationsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListMessageThreads(self, request, context):
        """Gives a paginated list of message threads with previews
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditMessageThreadStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessageThread(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessageThreadInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMessageThread(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditMessageThread(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MakeMessageThreadAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveMessageThreadAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveMessageThread(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InviteToMessageThread(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConversationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListMessageThreads': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMessageThreads,
                    request_deserializer=pb_dot_conversations__pb2.ListMessageThreadsReq.FromString,
                    response_serializer=pb_dot_conversations__pb2.ListMessageThreadsRes.SerializeToString,
            ),
            'EditMessageThreadStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.EditMessageThreadStatus,
                    request_deserializer=pb_dot_conversations__pb2.EditMessageThreadStatusReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetMessageThread': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessageThread,
                    request_deserializer=pb_dot_conversations__pb2.GetMessageThreadReq.FromString,
                    response_serializer=pb_dot_conversations__pb2.GetMessageThreadRes.SerializeToString,
            ),
            'GetMessageThreadInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessageThreadInfo,
                    request_deserializer=pb_dot_conversations__pb2.GetMessageThreadInfoReq.FromString,
                    response_serializer=pb_dot_conversations__pb2.GetMessageThreadInfoRes.SerializeToString,
            ),
            'CreateMessageThread': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMessageThread,
                    request_deserializer=pb_dot_conversations__pb2.CreateMessageThreadReq.FromString,
                    response_serializer=pb_dot_conversations__pb2.CreateMessageThreadRes.SerializeToString,
            ),
            'EditMessageThread': grpc.unary_unary_rpc_method_handler(
                    servicer.EditMessageThread,
                    request_deserializer=pb_dot_conversations__pb2.EditMessageThreadReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'MakeMessageThreadAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.MakeMessageThreadAdmin,
                    request_deserializer=pb_dot_conversations__pb2.ThreadUserReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RemoveMessageThreadAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveMessageThreadAdmin,
                    request_deserializer=pb_dot_conversations__pb2.ThreadUserReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=pb_dot_conversations__pb2.SendMessageReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'LeaveMessageThread': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveMessageThread,
                    request_deserializer=pb_dot_conversations__pb2.LeaveMessageThreadReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'InviteToMessageThread': grpc.unary_unary_rpc_method_handler(
                    servicer.InviteToMessageThread,
                    request_deserializer=pb_dot_conversations__pb2.ThreadUserReq.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SearchMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchMessages,
                    request_deserializer=pb_dot_conversations__pb2.SearchMessagesReq.FromString,
                    response_serializer=pb_dot_conversations__pb2.SearchMessagesRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'conversations.Conversations', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Conversations(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListMessageThreads(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/ListMessageThreads',
            pb_dot_conversations__pb2.ListMessageThreadsReq.SerializeToString,
            pb_dot_conversations__pb2.ListMessageThreadsRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditMessageThreadStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/EditMessageThreadStatus',
            pb_dot_conversations__pb2.EditMessageThreadStatusReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessageThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/GetMessageThread',
            pb_dot_conversations__pb2.GetMessageThreadReq.SerializeToString,
            pb_dot_conversations__pb2.GetMessageThreadRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessageThreadInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/GetMessageThreadInfo',
            pb_dot_conversations__pb2.GetMessageThreadInfoReq.SerializeToString,
            pb_dot_conversations__pb2.GetMessageThreadInfoRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMessageThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/CreateMessageThread',
            pb_dot_conversations__pb2.CreateMessageThreadReq.SerializeToString,
            pb_dot_conversations__pb2.CreateMessageThreadRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditMessageThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/EditMessageThread',
            pb_dot_conversations__pb2.EditMessageThreadReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MakeMessageThreadAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/MakeMessageThreadAdmin',
            pb_dot_conversations__pb2.ThreadUserReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveMessageThreadAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/RemoveMessageThreadAdmin',
            pb_dot_conversations__pb2.ThreadUserReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/SendMessage',
            pb_dot_conversations__pb2.SendMessageReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LeaveMessageThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/LeaveMessageThread',
            pb_dot_conversations__pb2.LeaveMessageThreadReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InviteToMessageThread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/InviteToMessageThread',
            pb_dot_conversations__pb2.ThreadUserReq.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/conversations.Conversations/SearchMessages',
            pb_dot_conversations__pb2.SearchMessagesReq.SerializeToString,
            pb_dot_conversations__pb2.SearchMessagesRes.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
